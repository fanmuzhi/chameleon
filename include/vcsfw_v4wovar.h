/* -*- mode: c; tab-width: 4 -*- */
/* $Header$ */

/*
 * Copyright (c) 2010-2015 Synaptics Incorporated.  All rights reserved.
 */

/*
 * vcsfw_v4wovar.h -- This file defines the wake-on-variance
 *  ("wovar") patch private interface for the Falcon part.
 *
 * NOTE:
 *  The interface defined here is expected to be implemented only
 * in a patch.
 *  I've purposefully put the definitions for this functionality
 * in this separate file and NOT in vcsfw_v4.h or vcsfw_v4priv.h
 * because it needs to be clearly stated that this interface is
 * subject to change.  That is: no attempt will be made to preserve
 * back compatability in future revisions of the patch.
 *  To put it another way: this file defines an interface used by
 * a specific patch.  If the patch changes, this file will change,
 * and the host-side code that uses both will also need to change.
 *
 * Bjoren Davis, 12. January, 2010.
 */

/*
 * Note that as of September 1, 2015, this file is controlled
 *  authoritatively in the git repository
 *    ssh://gitms@git.synaptics.com/git/biometrics/include.git.
 * Updates will continue to be copied into the CVSNT repository
 *  in /test/engineering/private/impl/micro/falcon/shared/vcsfw_v4wovar.h.
 * The last authoritative version of this file in CVSNT was
 *   /test/engineering/private/impl/micro/falcon/shared/vcsfw_v4wovar.h,v 1.2 2010/01/17 18:26:13 bdavis
 * DO NOT EDIT THIS FILE IN THE CVSNT REPOSITORY.  Your changes will
 *  be overwritten.
 */

#ifndef __VCVSFW_V4WOVAR_H
#define __VCVSFW_V4WOVAR_H

#include "vcsPushPack1.h"

/* VCSFW_PARAM_WOVAR -- Wake on (Fingerprint data spacial) variance */
/*
 * NOTE: This is a variable-length parameter.  The baseline data
 *  can run from 0 to a large number of channels.
 */
typedef struct VCS_PACKED vcsfw_param_wovar_s
{
    vcsUint32_t      thresh;    /* Threshold.  Above this value we assume
                                 *  the finger is there.
                                 */
    vcsUint16_t      firstchan; /* first channel, default = 0 */
    vcsUint16_t      nchan;     /* number of channels; 0 -> all channels */
    vcsUint8_t       bit_depth; /* number of bits per pixel, 1, 2, 4, or 8. */
    vcsUint8_t       baseline[1];   /* variable length array. */
} vcsfw_param_wovar_t;


#include "vcsPopPack.h"

#endif      /* __VCVSFW_V4WOVAR_H */
